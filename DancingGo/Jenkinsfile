pipeline{
    agent any
    stages{
        stage('spring-docker-build'){
            steps{
                sh 'docker build -t backend:latest /var/jenkins_home/workspace/DancingGo/DancingGo/backend'
            }
        }
        stage('vue-build'){
            steps{
                sh 'docker build -t frontend:latest /var/jenkins_home/workspace/DancingGo/DancingGo/frontend'
            }
        }
        stage('docker-run'){
            steps{
                sh 'docker ps -f name=frontend -q | xargs --no-run-if-empty docker container stop'
                sh 'docker ps -f name=backend -q | xargs --no-run-if-empty docker container stop'
                
                sh 'docker container ls -a -f name=frontend -q | xargs -r docker container rm'
                sh 'docker container ls -a -f name=backend -q | xargs -r docker container rm'
        
                sh 'docker images -f dangling=true && docker rmi -f $(docker images -f dangling=true -q)' 

                sh 'docker run -d --name frontend \
                -p 80:80 \
                -p 443:443 \
                -v /home/ubuntu/Dancing_Go/sslkey/:/var/jenkins_home/workspace/DancingGo/sslkey/ \
                --network dancinggonetwork \
                frontend:latest'

                sh 'docker run -d --name backend \
                --network dancinggonetwork backend:latest'
            }
        }
    }
}